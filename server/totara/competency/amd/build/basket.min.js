define(["core/notification"],function(a){function b(a,b){this.basketKey=a,this.persistant=b}return b.prototype.getKey=function(){return this.basketKey},b.prototype.update=function(b,c){return"add"===b?this.add(c):"remove"===b?this.remove(c):"replace"===b?this.replace(c):(a.exception({fileName:"simple_basket.js",message:"Invalid basket action given, expecting either add, remove or replace",name:"Error on basket action"}),null)},b.prototype.isPersistent=function(){return this.persistant},b.prototype.copyFrom=function(a){var b=this;return new Promise(function(c){a.load().then(function(a){b.replace(a).then(function(a){c(a)})})})},b.prototype.moveFrom=function(a){var b=this;return new Promise(function(c){a.load().then(function(d){b.add(d).then(function(b){a["delete"]().then(function(){c(b)})})})})},b.prototype.add=function(b){var c="You need to implement the add() function of your basket";return a.exception({message:c}),Promise.reject(b)},b.prototype.remove=function(b){var c="You need to implement the remove() function of your basket";return a.exception({message:c}),Promise.reject(b)},b.prototype.replace=function(b){var c="You need to implement the replace() function of your basket";return a.exception({message:c}),Promise.reject(b)},b.prototype.load=function(){var b="You need to implement the load() function of your basket";return a.exception({message:b}),Promise.reject()},b.prototype["delete"]=function(){var b="You need to implement the delete() function of your basket";return a.exception({message:b}),Promise.reject()},b});