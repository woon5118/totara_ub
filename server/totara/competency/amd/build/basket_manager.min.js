define(["core/notification"],function(a){function b(){return this instanceof b?(this.basket=null,this.classBasketWide="tw-selectionBasket--wide",this.eventListener="totara_core/selection_basket",this.eventNode=null,this.widget=null,this.itemQueueAction="",void(this.itemQueue=[])):new b}b.prototype.bubbledEventsListener=function(){var a=this;this.eventNode.addEventListener(this.eventListener+":transition",function(b){"small"===b.detail.state&&a.onBasketHidden(),M.util.js_complete("basketTransition")}),this.eventNode.addEventListener(this.eventListener+":update",function(b){var c=b.detail.action;"show"===c?(M.util.js_pending("basketTransition"),a.onBasketShow()):"hide"===c?a.onBasketHide():"clear"===c&&a.onBasketClear()})},b.prototype.getBasketKey=function(){return this.basket.getKey()},b.prototype.getEventListener=function(){return this.eventListener},b.prototype.getWideClass=function(){return this.classBasketWide},b.prototype.onBasketClear=function(){},b.prototype.onBasketHidden=function(){},b.prototype.onBasketHide=function(){},b.prototype.onBasketShow=function(){},b.prototype.onBasketUpdate=function(){},b.prototype.getBasket=function(){return this.basket},b.prototype.setBasket=function(a){this.basket=a},b.prototype.toggleExpandedView=function(){this.widget.classList.toggle(this.classBasketWide)},b.prototype.toggleShowBasketBtn=function(){this.widget.classList.toggle("tw-selectionBasket__displayed")},b.prototype.renderBasket=function(a){var b,c=this.widget,d=this;return new Promise(function(e){c&&(b=a.length,c.setAttribute("data-tw-selectionbasket-countchange",b)),d.onBasketUpdate(a),e()})},b.prototype.setParent=function(a){this.widget=a},b.prototype.setParentEventNode=function(a){this.eventNode=a},b.prototype.queueAdd=function(a){return"add"!==this.itemQueueAction&&(this.itemQueue=[]),this.itemQueueAction="add",Array.isArray(a)?this.itemQueue=this.itemQueue.concat(a):this.itemQueue.push(a),this},b.prototype.queueReplace=function(a){return"replace"!==this.itemQueueAction&&(this.itemQueue=[]),this.itemQueueAction="replace",Array.isArray(a)?this.itemQueue=this.itemQueue.concat(a):this.itemQueue.push(a),this},b.prototype.queueRemove=function(a){return"remove"!==this.itemQueueAction&&(this.itemQueue=[]),this.itemQueueAction="remove",Array.isArray(a)?this.itemQueue=this.itemQueue.concat(a):this.itemQueue.push(a),this},b.prototype.updateAndRender=function(){var b=this.itemQueueAction,c=this.itemQueue,d=this;return""===b||0===c.length?(a.exception({message:"No item was queue to perform an action, have you forgotten to call add, remove or replace?"}),Promise.reject()):(d.itemQueue=[],d.itemQueueAction="",this.basket.update(b,c).then(function(a){return d.renderBasket(a)})["catch"](function(){a.exception({message:"An error occurred updating the basket."})}))},b.prototype["delete"]=function(){return this.basket["delete"]()["catch"](function(){a.exception({message:"An error occurred deleting the basket."})})},b.prototype.deleteAndRender=function(){var a=this;return this["delete"]().then(function(){return a.renderBasket([])})},b.prototype.loadAndRender=function(){var a=this;return this.load().then(function(b){return a.renderBasket(b)})},b.prototype.load=function(){return this.basket.load()["catch"](function(){a.exception({message:"An error occurred loading the basket."})})},b.prototype.isPersistent=function(){return this.basket.isPersistent()};var c=function(a,c){var d=a.querySelector("[data-tw-selectionBasket]"),e=new b;return e.setParent(d),e.setParentEventNode(a),e.setBasket(c),e.bubbledEventsListener(),e};return{init:c}});