const path = require('path');
const fs = require('fs');
const fg = require('fast-glob');
const prettier = require('prettier');
const { rootDir } = require('../lib/common');
const { dirMaps } = require('../lib/resolution');
const prettierConfig = require(path.join(rootDir, '.prettierrc'));

/**
 * Stringify the provided JSON, pass it through Prettier, and write it to the provided file path.
 *
 * @param {string} path
 * @param {*} json
 */
function writeJson(path, json) {
  let content = JSON.stringify(json, null, 2);
  content = prettier.format(content, { ...prettierConfig, parser: 'json' });
  fs.writeFileSync(path, content, 'utf8');
}

/**
 * Generate project configs for editor support
 */
function generateProjectConfigs() {
  const tuiConfigFiles = fg.sync('client/component/*/src/tui.json', { cwd: rootDir });

  const baseFolders = tuiConfigFiles.reduce((acc, configFile) => {
    const config = JSON.parse(
      fs.readFileSync(path.resolve(rootDir, configFile))
    );
    if (!config || !config.component) {
      return acc;
    }
    acc[config.component] = path.dirname(configFile);
    return acc;
  }, {});

  generateJsconfig(baseFolders);
}

/**
 * Generate jsconfig.json (VS Code)
 *
 * @param {object} baseFolders
 */
function generateJsconfig(baseFolders) {
  const paths = Object.entries(baseFolders).reduce(
    (acc, [idBase, pathBase]) => {
      dirMaps.forEach(dirMap => {
        acc[idBase + dirMap.idBaseSuffix + '/*'] = [
          './' + path.join(pathBase, dirMap.path) + '/*',
        ];
      });
      return acc;
    },
    {}
  );

  const jsconfig = {
    '//': 'generated by `npm run generate-configs`',
    compilerOptions: {
      baseUrl: '.',
      paths,
    },
    include: ['client/component/*/src'],
    exclude: ['node_modules', 'vendor', 'build'],
  };

  writeJson(path.join(rootDir, 'jsconfig.json'), jsconfig);
}

generateProjectConfigs();
