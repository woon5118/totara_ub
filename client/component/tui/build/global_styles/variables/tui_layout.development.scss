/* This file is part of Totara Enterprise Extensions.*/
/**/
/* Copyright (C) 2020 onwards Totara Learning Solutions LTD*/
/**/
/* Totara Enterprise Extensions is provided only to Totara*/
/* Learning Solutions LTD's customers and partners, pursuant to*/
/* the terms and conditions of a separate agreement with Totara*/
/* Learning Solutions LTD or its affiliate.*/
/**/
/* If you do not have an agreement with Totara Learning Solutions*/
/* LTD, you may not access, use, modify, or distribute this software.*/
/* Please contact [licensing@totaralearning.com] for more information.*/
/**/
/* @author    Simon Chester <simon.chester@totaralearning.com>*/
/* @module tuickage   tui*/

/* Sidebar layout that is responsive based on the size of its container, rather*/
/* than the viewport.*/
@mixin tui-layout-sidebar(
  /* width of the sidebar*/
    $side-width: 'content',
  /* width of the content*/
    $content-min-width: 50%,
  /* size of the gutter between sidebar and content*/
    $gutter: 0,
  /* selector for child sidebar element*/
    $sidebar-selector: ':nth-child(1)',
  /* selector for child content element*/
    $content-selector: ':nth-child(2)'
) {
  & {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin: calc((#{$gutter} / 2) * -1);

    & > #{$sidebar-selector} {
      @if $side-width != 'content' {
        flex-basis: $side-width;
      }
      flex-grow: 0;
      margin: calc(#{$gutter} / 2);
    }

    & > #{$content-selector} {
      flex-basis: 0;
      /* Set a really high flex-grow value so it takes up all the available*/
      /* space. This will squish the sidebar down to its intrinsic width*/
      /* (or flex-basis, if set).*/
      flex-grow: 999;
      /* This element cannot shrink beyond min-width, so it will wrap on to the*/
      /* next line (switch to vertical).*/
      min-width: calc(#{$content-min-width} - #{$gutter});
      margin: calc(#{$gutter} / 2);
    }
  }
}


//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvY29tcG9uZW50L3R1aS9zcmMvZ2xvYmFsX3N0eWxlcy92YXJpYWJsZXMvdHVpX2xheW91dC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJjbGllbnQvY29tcG9uZW50L3R1aS9idWlsZC9nbG9iYWxfc3R5bGVzL3ZhcmlhYmxlcy90dWlfbGF5b3V0LmRldmVsb3BtZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBUb3RhcmEgRW50ZXJwcmlzZSBFeHRlbnNpb25zLiovXG4vKiovXG4vKiBDb3B5cmlnaHQgKEMpIDIwMjAgb253YXJkcyBUb3RhcmEgTGVhcm5pbmcgU29sdXRpb25zIExURCovXG4vKiovXG4vKiBUb3RhcmEgRW50ZXJwcmlzZSBFeHRlbnNpb25zIGlzIHByb3ZpZGVkIG9ubHkgdG8gVG90YXJhKi9cbi8qIExlYXJuaW5nIFNvbHV0aW9ucyBMVEQncyBjdXN0b21lcnMgYW5kIHBhcnRuZXJzLCBwdXJzdWFudCB0byovXG4vKiB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgYSBzZXBhcmF0ZSBhZ3JlZW1lbnQgd2l0aCBUb3RhcmEqL1xuLyogTGVhcm5pbmcgU29sdXRpb25zIExURCBvciBpdHMgYWZmaWxpYXRlLiovXG4vKiovXG4vKiBJZiB5b3UgZG8gbm90IGhhdmUgYW4gYWdyZWVtZW50IHdpdGggVG90YXJhIExlYXJuaW5nIFNvbHV0aW9ucyovXG4vKiBMVEQsIHlvdSBtYXkgbm90IGFjY2VzcywgdXNlLCBtb2RpZnksIG9yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZS4qL1xuLyogUGxlYXNlIGNvbnRhY3QgW2xpY2Vuc2luZ0B0b3RhcmFsZWFybmluZy5jb21dIGZvciBtb3JlIGluZm9ybWF0aW9uLiovXG4vKiovXG4vKiBAYXV0aG9yICAgIFNpbW9uIENoZXN0ZXIgPHNpbW9uLmNoZXN0ZXJAdG90YXJhbGVhcm5pbmcuY29tPiovXG4vKiBAbW9kdWxlIHR1aWNrYWdlICAgdHVpKi9cblxuLyogU2lkZWJhciBsYXlvdXQgdGhhdCBpcyByZXNwb25zaXZlIGJhc2VkIG9uIHRoZSBzaXplIG9mIGl0cyBjb250YWluZXIsIHJhdGhlciovXG4vKiB0aGFuIHRoZSB2aWV3cG9ydC4qL1xuQG1peGluIHR1aS1sYXlvdXQtc2lkZWJhcihcbiAgLyogd2lkdGggb2YgdGhlIHNpZGViYXIqL1xuICAgICRzaWRlLXdpZHRoOiAnY29udGVudCcsXG4gIC8qIHdpZHRoIG9mIHRoZSBjb250ZW50Ki9cbiAgICAkY29udGVudC1taW4td2lkdGg6IDUwJSxcbiAgLyogc2l6ZSBvZiB0aGUgZ3V0dGVyIGJldHdlZW4gc2lkZWJhciBhbmQgY29udGVudCovXG4gICAgJGd1dHRlcjogMCxcbiAgLyogc2VsZWN0b3IgZm9yIGNoaWxkIHNpZGViYXIgZWxlbWVudCovXG4gICAgJHNpZGViYXItc2VsZWN0b3I6ICc6bnRoLWNoaWxkKDEpJyxcbiAgLyogc2VsZWN0b3IgZm9yIGNoaWxkIGNvbnRlbnQgZWxlbWVudCovXG4gICAgJGNvbnRlbnQtc2VsZWN0b3I6ICc6bnRoLWNoaWxkKDIpJ1xuKSB7XG4gICYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiBjYWxjKCgjeyRndXR0ZXJ9IC8gMikgKiAtMSk7XG5cbiAgICAmID4gI3skc2lkZWJhci1zZWxlY3Rvcn0ge1xuICAgICAgQGlmICRzaWRlLXdpZHRoICE9ICdjb250ZW50JyB7XG4gICAgICAgIGZsZXgtYmFzaXM6ICRzaWRlLXdpZHRoO1xuICAgICAgfVxuICAgICAgZmxleC1ncm93OiAwO1xuICAgICAgbWFyZ2luOiBjYWxjKCN7JGd1dHRlcn0gLyAyKTtcbiAgICB9XG5cbiAgICAmID4gI3skY29udGVudC1zZWxlY3Rvcn0ge1xuICAgICAgZmxleC1iYXNpczogMDtcbiAgICAgIC8qIFNldCBhIHJlYWxseSBoaWdoIGZsZXgtZ3JvdyB2YWx1ZSBzbyBpdCB0YWtlcyB1cCBhbGwgdGhlIGF2YWlsYWJsZSovXG4gICAgICAvKiBzcGFjZS4gVGhpcyB3aWxsIHNxdWlzaCB0aGUgc2lkZWJhciBkb3duIHRvIGl0cyBpbnRyaW5zaWMgd2lkdGgqL1xuICAgICAgLyogKG9yIGZsZXgtYmFzaXMsIGlmIHNldCkuKi9cbiAgICAgIGZsZXgtZ3JvdzogOTk5O1xuICAgICAgLyogVGhpcyBlbGVtZW50IGNhbm5vdCBzaHJpbmsgYmV5b25kIG1pbi13aWR0aCwgc28gaXQgd2lsbCB3cmFwIG9uIHRvIHRoZSovXG4gICAgICAvKiBuZXh0IGxpbmUgKHN3aXRjaCB0byB2ZXJ0aWNhbCkuKi9cbiAgICAgIG1pbi13aWR0aDogY2FsYygjeyRjb250ZW50LW1pbi13aWR0aH0gLSAjeyRndXR0ZXJ9KTtcbiAgICAgIG1hcmdpbjogY2FsYygjeyRndXR0ZXJ9IC8gMik7XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9